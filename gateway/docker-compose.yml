version: '3.8'

services:
  kong-database:
    image: postgres:13
    container_name: kong-database
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kongpass
    ports:
      - "5432:5432"
    networks:
      - microservice-network
    restart: always

  kong-migrations:
    image: kong/kong-gateway:3.8.1.0
    container_name: kong-migrations
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kongpass
      KONG_PASSWORD: test
    networks:
      - microservice-network
    depends_on:
      - kong-database
    command: kong migrations bootstrap
    restart: on-failure

  kong-gateway:
    image: kong/kong-gateway:3.8.1.0
    container_name: kong-gateway
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_ADMIN_GUI_URL: "http://localhost:8002"
      KONG_LICENSE_DATA: ""
      IP_ADR: host.docker.internal
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
      - "8002:8002"
      - "8445:8445"
      - "8003:8003"
      - "8004:8004"
    networks:
      - microservice-network
    depends_on:
      - kong-database
    restart: always

  kong-setup:
    build:
      context: ./setup
    container_name: kong-setup
    networks:
      - microservice-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - kong-gateway
    restart: "on-failure"

networks:
  microservice-network:
    name: microservice-network
    driver: bridge
    external: true
